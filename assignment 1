-- Start

declare
 
x number(5);            
y number(5);           
z number(7);       
 
 begin
 

x:=10;                
 

y:=20;                
 

z:=x+y;                
dbms_output.put_line('Sum is '||z);
end;
                   
									 
--3rd

declare
   

n number;            
i number;           
temp number;       
   
begin
   

n := 13;                
   

i := 2;
  

temp := 1;
  

  for i in 2..n/2
    loop
        if mod(n, i) = 0
        then
            temp := 0;
            exit;
        end if;
    end loop;
   
    if temp = 1
    then
        dbms_output.put_line('true');
    else
        dbms_output.put_line('false');
    end if;
end;         
 						
						
--4th
declare

fac number :=1;


n number := 1;


begin		

	
while n > 0 loop


fac:=n*fac;		
n:=n-1;		
end loop;		


dbms_output.put_line(fac);


end;			

---5

SET SERVEROUTPUT ON;
DECLARE

num NUMBER;
rev NUMBER;

BEGIN

num:=#

rev:=0;

WHILE num>0 LOOP

rev:=(rev*10) + mod(num,10);

num:=floor(num/10);
END LOOP;
DBMS_OUTPUT.PUT_LINE('Reverse of the number is: ' || rev);
END;
/

--6th

declare


first number := 0;
second number := 1;
temp number;

n number := 5;
i number;

begin

	dbms_output.put_line('Series:');


	dbms_output.put_line(first);
	dbms_output.put_line(second);


	for i in 2..n
	loop
		temp:=first+second;

first := second;
second := temp;


	dbms_output.put_line(temp);
end loop;

end;


---7th

DECLARE
	
	n NUMBER := 1634;
	r NUMBER;
BEGIN
	
	r := MOD(n, 2);

	IF r = 0 THEN
	dbms_output.Put_line('Even');
	ELSE
	dbms_output.Put_line('Odd');
	END IF;
END;

--8th
DECLARE

	str VARCHAR(20) := 'skeegrofskeeg';
	len NUMBER;
	str1 VARCHAR(20);
BEGIN
	
	len := Length(str);


	FOR i IN REVERSE 1.. len LOOP
			
		str1 := str1
				|| Substr(str, i, 1);
	END LOOP;

	dbms_output.Put_line('Reverse of string is '
						|| str1);
END;


--9th

declare


	n number;
	m number;
	temp number:=0;
	rem number;

begin
	n:=5432112345;
	m:=n;
	
	while n>0
	loop
		rem:=mod(n,10);
		temp:=(temp*10)+rem;
		n:=trunc(n/10);
	end loop; 
	
	if m = temp
	then
		dbms_output.put_line('true');
	else
		dbms_output.put_line('false');
	end if;
end;
/



--10th

declare


	num1 number;
	num2 number;
	temp number;


begin
	num1:=1000;
	num2:=2000;
	
	
	dbms_output.put_line('before');
	dbms_output.put_line('num1 = '|| num1 ||' num2 = '|| num2);
	
	
	temp := num1;
	num1 := num2;
	num2 := temp;
	

	dbms_output.put_line('after');
	dbms_output.put_line('num1 = '|| num1 ||' num2 = '|| num2);
	
end;

--11th


DECLARE

	a NUMBER := 46;
	
	b NUMBER := 67;

	c NUMBER := 21;
BEGIN
	
	IF a > b
	AND a > c THEN

	dbms_output.Put_line('Greatest number is '
						||a);
	ELSIF b > a
		AND b > c THEN
	
	dbms_output.Put_line('Greatest number is '
						||b);
	ELSE
	
	dbms_output.Put_line('Greatest number is '
						||c);
	END IF;

END;



--5th one is not running and 12,1st is not attempted
